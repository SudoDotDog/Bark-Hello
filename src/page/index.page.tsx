/**
 * @author WMXPY
 * @overview generated by ghoti-cli
 * @fileoverview Page set PageGhotiIndex
 */

import * as React from 'react';
import * as Component from '../component/import';
import { IPage, IRow } from '../interface';

export interface IProps {

}

export interface IState {
    page: IPage;
    open: boolean;
    element: JSX.Element;
}

class PageGhotiIndex extends React.Component<IProps, IState> {
    public readonly state = {
        page: {} as any,
        open: false,
        element: null,
    };

    public constructor(props) {
        super(props);
        this.add = this.add.bind(this);
        this.trigger = this.trigger.bind(this);
        this.element = this.element.bind(this);
        this.store = this.store.bind(this);
    }

    componentWillMount() {
        let storage: IPage | undefined = JSON.parse(localStorage.getItem('info'));

        if (!storage) {
            console.log('init');
            let temp: IPage = {
                rows: [{
                    cards: [],
                    name: ''
                }],
            }
            localStorage.setItem('info', JSON.stringify(temp));
            storage = temp;
        }

        this.setState({
            page: storage,
        })
    }

    public render() {
        if (!this.state.page) {
            return;
        }
        return (<div className="row-container">
            {this.state.page.rows.map((row: IRow, index: number) => {
                return <div className="row" key={index}>
                    <Component.row
                        open={(component: JSX.Element) => {
                            this.setState({
                                element: component,
                            });
                            this.panel(true);
                        }}
                        close={() => this.panel(false)}
                        row={row}
                        update={(row: IRow) => {
                            const page = this.state.page;
                            page.rows[index] = row;
                            console.log(row);
                            this.add(page);
                        }}></Component.row>
                </div>;
            })}
            <div className={this.state.open ? "open" : "closed"}>
                <div className="row-right">
                    <button onClick={() => {
                        let name: string = "";
                        this.element(
                            <div>
                                <Component.input label="Name" onChange={(value) => name = value}></Component.input>
                                <button onClick={() => {
                                    const temp: IPage = this.state.page;
                                    temp.rows.push({
                                        cards: [],
                                        name,
                                    });
                                    this.setState({ page: temp });
                                    this.panel(false);
                                }}>ADD</button>
                            </div>
                        );
                    }}>+</button>
                    <button onClick={() => {
                        localStorage.removeItem('info');
                    }}>R</button>
                    <button onClick={this.trigger}>!</button>
                    <button onClick={() => {
                        let json: string = JSON.stringify(this.state.page, null, 2);
                        this.element(
                            <div>
                                <textarea
                                    ref={(ref) => {
                                        ref.value = json;
                                    }}
                                    onChange={(event) => json = event.target.value}></textarea>
                                <button onClick={() => {
                                    try {
                                        const parsed = JSON.parse(json);
                                        this.setState({
                                            page: parsed,
                                        }, this.store);
                                    } catch (err) {
                                        alert(err);
                                    }
                                }}>Change</button>
                            </div>
                        );
                    }}>:D</button>
                </div>
                <div>
                    {this.state.element}
                </div>
            </div>
        </div>);
    }

    protected element(element: JSX.Element) {
        this.setState({
            element,
        });
        this.panel(true);
    }

    protected store() {
        localStorage.setItem('info', JSON.stringify(this.state.page));
    }

    protected add(newPage: IPage) {
        localStorage.setItem('info', JSON.stringify(newPage));
        this.setState({ page: newPage });
    }

    protected panel(which: boolean) {
        if(!which){
            this.setState({
                element: null,
            });
        }
        this.setState({
            open: which,
        });
    }

    protected trigger() {
        this.setState({
            open: !this.state.open,
        });
    }
}

export default PageGhotiIndex;
